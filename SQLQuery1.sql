CREATE DATABASE QLCHQA;
USE QLCHQA;
CREATE TABLE NHANVIEN (
    IDNHANVIEN INT IDENTITY(1,1) PRIMARY KEY,
    TENNHANVIEN NVARCHAR(100) NOT NULL,
    GIOITINH NVARCHAR(15) NOT NULL
	CHECK (GIOITINH=N'Nam' OR GIOITINH=N'Nữ'),
    NGAYSINH DATETIME NOT NULL
	CHECK (DATEDIFF(YEAR,NGAYSINH,GETDATE())>=18),
    SODIENTHOAI VARCHAR(10) NOT NULL,
    DIACHI NVARCHAR(255) NOT NULL,
);

CREATE TABLE LOAIHANG (
    IDLOAIHANG INT IDENTITY(1,1) PRIMARY KEY,
    TENLOAIHANG NVARCHAR(100) NOT NULL
);

CREATE TABLE NHACUNGCAP (
    IDNHACUNGCAP INT IDENTITY(1,1) PRIMARY KEY ,
    TENNHACUNGCAP NVARCHAR(100) NOT NULL,
    DIACHI NVARCHAR(255) NOT NULL,
    DIENTHOAI VARCHAR(10) NOT NULL,
);

CREATE TABLE MATHANG (
    IDMATHANG INT IDENTITY(1,1) PRIMARY KEY ,
    TENMATHANG NVARCHAR(100) NOT NULL,
    IDLOAIHANG INT NOT NULL,
	IDNHACUNGCAP INT NOT NULL,
    GIA FLOAT NOT NULL,
    SOLUONGTON INT NOT NULL DEFAULT 0,
    CONSTRAINT FK_LOAIHANG FOREIGN KEY (IDLOAIHANG) REFERENCES LOAIHANG(IDLOAIHANG),
	CONSTRAINT FK_NHACUNGCAP FOREIGN KEY (IDNHACUNGCAP) REFERENCES NHACUNGCAP(IDNHACUNGCAP)
);

CREATE TABLE DONDATHANG (
    IDDONDATHANG INT IDENTITY(1,1) PRIMARY KEY,
    IDNHANVIEN INT NOT NULL,
    NGAYDATHANG DATETIME NOT NULL,
    NGAYGIAOHANG DATETIME NOT NULL,
	TINHTRANG NVARCHAR(50),
	TONGTIEN FLOAT CHECK(TONGTIEN>=0) NOT NULL,
    CONSTRAINT FK_NHANVIEN FOREIGN KEY (IDNHANVIEN) REFERENCES NHANVIEN(IDNHANVIEN)
);

CREATE TABLE CHITIETDATHANG (
    IDDONDATHANG INT NOT NULL,
    IDMATHANG INT NOT NULL,
    SOLUONG INT NOT NULL,
    GIABAN FLOAT NOT NULL,
    THANHTIEN AS (SOLUONG * GIABAN),  
    CONSTRAINT FK_DONDATHANG FOREIGN KEY (IDDONDATHANG) REFERENCES DONDATHANG(IDDONDATHANG),
    CONSTRAINT FK_MATHANG FOREIGN KEY (IDMATHANG) REFERENCES MATHANG(IDMATHANG),
	PRIMARY KEY(IDDONDATHANG,IDMATHANG)
);

CREATE TABLE TAIKHOAN(
	IDTAIKHOAN INT IDENTITY(1,1) PRIMARY KEY,
	TENTAIKHOAN VARCHAR(255) NOT NULL,
	MATKHAU VARCHAR(255) NOT NULL
);

INSERT INTO TAIKHOAN (TENTAIKHOAN, MATKHAU) VALUES
('admin', 'admin')


INSERT INTO NHANVIEN ( TENNHANVIEN, GIOITINH, NGAYSINH, SODIENTHOAI, DIACHI)
VALUES
( N'Nguyễn Văn Minh', N'Nam', '1990-05-15', '0901234567', N'2 Hàng Bài,Hà Nội'),
( N'Trần Thị Vân ', N'Nữ', '1992-03-10', '0902345678', N'34 Hồ Tùng Mậu, Hà Nội');

INSERT INTO LOAIHANG ( TENLOAIHANG)
VALUES
( N'Áo sơ mi'),
( N'Quần jean'),
( N'Giày dép'),
( N'Phụ kiện');


INSERT INTO NHACUNGCAP (TENNHACUNGCAP, DIACHI, DIENTHOAI)
VALUES
( 'Cong Ty ABC', 'Quan 1, TP.HP', '0283847345'),
( 'Cong Ty XYZ', 'Ha Noi', '024654321');

INSERT INTO MATHANG ( TENMATHANG, IDLOAIHANG, IDNHACUNGCAP, GIA, SOLUONGTON)
VALUES
( N'Áo sơ mi trắng', '1', '1', '200000', '50'),
( N'Quần jean xanh', '2', '2', '350000', '30'),
( N'Giày thể thao', '3', '1', '500000', '20'),
( N'Mũ lưỡi trai', '4', '2', '150000', '100');

INSERT INTO DONDATHANG ( IDNHANVIEN, NGAYDATHANG, NGAYGIAOHANG,TINHTRANG,TONGTIEN)
VALUES
('1', '2024-11-01', '2024-11-05', 'Chưa giao', '550000'),
('2', '2024-11-02', '2024-11-07', 'Đang giao', '700000');

INSERT INTO CHITIETDATHANG (IDDONDATHANG, IDMATHANG, SOLUONG, GIABAN)
VALUES
('1','1', '2', '200000'),  
('2','2', '1', '350000');

GO

CREATE PROCEDURE ThemNhanVien
   @TENNHANVIEN NVARCHAR(100),
   @GIOITINH NVARCHAR(15),
   @NGAYSINH DATETIME,
   @SODIENTHOAI VARCHAR(10),
   @DIACHI NVARCHAR(255)
AS
BEGIN
   IF (DATEDIFF(YEAR, @NGAYSINH, GETDATE()) < 18)
   BEGIN
       RAISERROR(N'Nhân viên phải từ 18 tuổi trở lên!', 16, 1)
       RETURN
   END

   INSERT INTO NHANVIEN(TENNHANVIEN, GIOITINH, NGAYSINH, SODIENTHOAI, DIACHI)
   VALUES(@TENNHANVIEN, @GIOITINH, @NGAYSINH, @SODIENTHOAI, @DIACHI)
END

GO

CREATE PROCEDURE SuaNhanVien
   @IDNHANVIEN INT,
   @TENNHANVIEN NVARCHAR(100),
   @GIOITINH NVARCHAR(15),
   @NGAYSINH DATETIME,
   @SODIENTHOAI VARCHAR(10),
   @DIACHI NVARCHAR(255)
AS
BEGIN
   IF NOT EXISTS (SELECT 1 FROM NHANVIEN WHERE IDNHANVIEN = @IDNHANVIEN)
   BEGIN
       RAISERROR(N'Nhân viên không tồn tại!', 16, 1)
       RETURN
   END

   IF (DATEDIFF(YEAR, @NGAYSINH, GETDATE()) < 18)
   BEGIN
       RAISERROR(N'Nhân viên phải từ 18 tuổi trở lên!', 16, 1)
       RETURN
   END

   UPDATE NHANVIEN
   SET TENNHANVIEN = @TENNHANVIEN,
       GIOITINH = @GIOITINH,
       NGAYSINH = @NGAYSINH,
       SODIENTHOAI = @SODIENTHOAI,
       DIACHI = @DIACHI
   WHERE IDNHANVIEN = @IDNHANVIEN
END

GO

CREATE PROCEDURE XoaNhanVien
   @IDNHANVIEN INT
AS
BEGIN
   IF NOT EXISTS (SELECT 1 FROM NHANVIEN WHERE IDNHANVIEN = @IDNHANVIEN)
   BEGIN
       RAISERROR(N'Nhân viên không tồn tại!', 16, 1)
       RETURN
   END

   IF EXISTS (SELECT 1 FROM DONDATHANG WHERE IDNHANVIEN = @IDNHANVIEN)
   BEGIN
       RAISERROR(N'Không thể xóa nhân viên vì đang có đơn hàng liên quan!', 16, 1)
       RETURN
   END

   DELETE FROM NHANVIEN WHERE IDNHANVIEN = @IDNHANVIEN
END

GO

CREATE PROCEDURE ThemNhaCungCap
   @TENNHACUNGCAP NVARCHAR(100),
   @DIACHI NVARCHAR(255),
   @DIENTHOAI VARCHAR(10)
AS
BEGIN
   INSERT INTO NHACUNGCAP(TENNHACUNGCAP, DIACHI, DIENTHOAI)
   VALUES(@TENNHACUNGCAP, @DIACHI, @DIENTHOAI)
END

GO

CREATE PROCEDURE SuaNhaCungCap
   @IDNHACUNGCAP INT,
   @TENNHACUNGCAP NVARCHAR(100),
   @DIACHI NVARCHAR(255),
   @DIENTHOAI VARCHAR(10)
AS
BEGIN
   IF NOT EXISTS (SELECT 1 FROM NHACUNGCAP WHERE IDNHACUNGCAP = @IDNHACUNGCAP)
   BEGIN
       RAISERROR(N'Nhà cung cấp không tồn tại!', 16, 1)
       RETURN
   END

   UPDATE NHACUNGCAP
   SET TENNHACUNGCAP = @TENNHACUNGCAP,
       DIACHI = @DIACHI,
       DIENTHOAI = @DIENTHOAI
   WHERE IDNHACUNGCAP = @IDNHACUNGCAP
END

GO

CREATE PROCEDURE XoaNhaCungCap
   @IDNHACUNGCAP INT
AS
BEGIN
   IF NOT EXISTS (SELECT 1 FROM NHACUNGCAP WHERE IDNHACUNGCAP = @IDNHACUNGCAP)
   BEGIN
       RAISERROR(N'Nhà cung cấp không tồn tại!', 16, 1)
       RETURN
   END

   IF EXISTS (SELECT 1 FROM MATHANG WHERE IDNHACUNGCAP = @IDNHACUNGCAP)
   BEGIN
       RAISERROR(N'Không thể xóa nhà cung cấp vì đang có mặt hàng liên quan!', 16, 1)
       RETURN
   END

   DELETE FROM NHACUNGCAP WHERE IDNHACUNGCAP = @IDNHACUNGCAP
END
go
CREATE PROCEDURE XoaLoaiHang
   @IDLOAIHANG INT
AS
BEGIN
   IF NOT EXISTS (SELECT 1 FROM LOAIHANG WHERE IDLOAIHANG = @IDLOAIHANG)
   BEGIN
       RAISERROR(N'Loại hàng không tồn tại!', 16, 1)
       RETURN
   END

   IF EXISTS (SELECT 1 FROM MATHANG WHERE IDLOAIHANG = @IDLOAIHANG)
   BEGIN
       RAISERROR(N'Không thể xóa loại hàng vì đang có đơn hàng liên quan!', 16, 1)
       RETURN
   END

   DELETE FROM LOAIHANG WHERE IDLOAIHANG = @IDLOAIHANG
END
